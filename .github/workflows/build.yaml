name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create release for (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'

jobs:
  build-android:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Decode Keystore
        run: |
          $bytes = [System.Convert]::FromBase64String("${{ secrets.KEY_STORE }}")
          [IO.File]::WriteAllBytes("android/app/keystore.jks", $bytes)
        shell: powershell

      - name: Create keystore properties file
        run: |
         echo storePassword=${{ secrets.KEY_STORE_PASSWORD }} > android/key.properties
         echo keyPassword=${{ secrets.KEY_PASSWORD }} >> android/key.properties
         echo keyAlias=${{ secrets.KEY_ALIAS }} >> android/key.properties
         echo storeFile=keystore.jks >> android/key.properties
        shell: bash

      - name: Get dependencies
        run: flutter pub get

      - name: Build universal APK
        run: flutter build apk

      - name: Build split APKs
        run: flutter build apk --split-per-abi

      - name: Rename APKs
        run: |
          mkdir -p release
          copy build\app\outputs\flutter-apk\app-release.apk release\VandCloud-universal.apk
          copy build\app\outputs\flutter-apk\app-armeabi-v7a-release.apk release\VandCloud-armeabi-v7a.apk
          copy build\app\outputs\flutter-apk\app-arm64-v8a-release.apk release\VandCloud-arm64-v8a.apk
          copy build\app\outputs\flutter-apk\app-x86_64-release.apk release\VandCloud-x86_64.apk
        shell: cmd

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: release/

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Build Windows
        run: flutter build windows --release

      - name: Install Inno Setup
        run: |
          choco install innosetup -y
        shell: cmd

      - name: Create Windows installer
        run: |
          cd windows\installer
          ISCC.exe VandCloud.iss
        shell: cmd

      - name: Package Windows build
        run: |
          mkdir -p release
          copy windows\installer\VandCloud-setup.exe release\
        shell: cmd

      - name: Create Windows ZIP (Installer)
        run: |
          cd release
          7z a -tzip VandCloud-windows-installer.zip VandCloud-setup.exe
        shell: cmd

      - name: Create Windows Portable ZIP
        run: |
          mkdir -p release\portable
          xcopy build\windows\x64\runner\Release\* release\portable\ /E /I
          cd release
          7z a -tzip VandCloud-windows-portable.zip portable\
        shell: cmd

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: |
            release/VandCloud-setup.exe
            release/VandCloud-windows-installer.zip
            release/VandCloud-windows-portable.zip

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Get dependencies
        run: flutter pub get

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev desktop-file-utils libgdk-pixbuf2.0-dev
        shell: bash

      - name: Build Linux
        run: flutter build linux --release

      - name: Install packaging tools
        run: |
          sudo apt-get install -y rpm ruby ruby-dev rubygems build-essential
          sudo gem install fpm
        shell: bash

      - name: Create DEB and RPM packages
        run: |
          # Create directory structure for packaging
          mkdir -p vandcloud-package/usr/bin
          mkdir -p vandcloud-package/usr/lib
          mkdir -p vandcloud-package/usr/share/applications
          mkdir -p vandcloud-package/usr/share/icons/hicolor/16x16/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/22x22/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/24x24/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/32x32/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/48x48/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/64x64/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/128x128/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/256x256/apps
          mkdir -p vandcloud-package/usr/share/icons/hicolor/512x512/apps
          
          # Copy application files
          cp -r build/linux/x64/release/bundle/* vandcloud-package/usr/bin/
          
          # Copy desktop file
          cp linux/runner/vandcloud.desktop vandcloud-package/usr/share/applications/
          
          # Copy icons
          cp linux/assets/icons/icon_16.png vandcloud-package/usr/share/icons/hicolor/16x16/apps/vandcloud.png
          cp linux/assets/icons/icon_22.png vandcloud-package/usr/share/icons/hicolor/22x22/apps/vandcloud.png
          cp linux/assets/icons/icon_24.png vandcloud-package/usr/share/icons/hicolor/24x24/apps/vandcloud.png
          cp linux/assets/icons/icon_32.png vandcloud-package/usr/share/icons/hicolor/32x32/apps/vandcloud.png
          cp linux/assets/icons/icon_48.png vandcloud-package/usr/share/icons/hicolor/48x48/apps/vandcloud.png
          cp linux/assets/icons/icon_64.png vandcloud-package/usr/share/icons/hicolor/64x64/apps/vandcloud.png
          cp linux/assets/icons/icon_128.png vandcloud-package/usr/share/icons/hicolor/128x128/apps/vandcloud.png
          cp linux/assets/icons/icon_256.png vandcloud-package/usr/share/icons/hicolor/256x256/apps/vandcloud.png
          cp linux/assets/icons/icon_512.png vandcloud-package/usr/share/icons/hicolor/512x512/apps/vandcloud.png
          cp linux/assets/icons/vandcloud.png vandcloud-package/usr/share/icons/hicolor/256x256/apps/vandcloud.png
          
          # Ensure release directory exists
          mkdir -p release
          
          # Get version from pubspec.yaml
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          
          # Create DEB package
          fpm -s dir -t deb \
            -n vandcloud \
            -v $VERSION \
            --description "VandCloud Application" \
            --url "https://github.com/code3-dev/VandCloud" \
            --maintainer "Hossein Pira" \
            --vendor "VandCloud" \
            --license "MIT" \
            --category "Utility" \
            --depends "libgtk-3-0" \
            --depends "liblzma5" \
            -C vandcloud-package \
            --package release/vandcloud.deb \
            .
          
          # Create RPM package
          fpm -s dir -t rpm \
            -n vandcloud \
            -v $VERSION \
            --description "VandCloud" \
            --url "https://github.com/code3-dev/VandCloud" \
            --maintainer "Hossein Pira" \
            --vendor "VandCloud" \
            --license "MIT" \
            --category "Applications/Utilities" \
            --depends "gtk3" \
            --depends "xz-libs" \
            -C vandcloud-package \
            --package release/vandcloud.rpm \
            .
        shell: bash

      - name: Create Linux AppImage (Optional)
        run: |
          # Ensure release directory exists
          mkdir -p release
          
          # Get version from pubspec.yaml
          VERSION=$(grep '^version:' pubspec.yaml | cut -d ':' -f 2 | tr -d ' ')
          echo "Building AppImage for version: $VERSION"
          
          # Download linuxdeploy tool
          echo "Downloading linuxdeploy..."
          wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
          chmod +x linuxdeploy-x86_64.AppImage
          
          # Create AppDir structure
          echo "Creating AppDir structure..."
          mkdir -p vandcloud.AppDir/usr/bin
          mkdir -p vandcloud.AppDir/usr/lib
          cp -r build/linux/x64/release/bundle/* vandcloud.AppDir/usr/bin/
          
          # Create desktop entry
          echo "Creating desktop entry..."
          cat > vandcloud.AppDir/vandcloud.desktop << EOF
          [Desktop Entry]
          Name=VandCloud
          Exec=vandcloud
          Icon=vandcloud
          Type=Application
          Categories=Utility;
          EOF
          
          # Copy icon with the correct name for AppImage
          echo "Copying icon..."
          cp linux/assets/icons/icon_256.png vandcloud.AppDir/vandcloud.png
          
          # List files for debugging
          echo "AppDir contents:"
          find vandcloud.AppDir -type f | head -20
          
          # Try to create AppImage with proper environment
          echo "Creating AppImage..."
          OUTPUT=release/VandCloud-$VERSION-linux.AppImage ./linuxdeploy-x86_64.AppImage --appdir vandcloud.AppDir --output appimage --desktop-file=vandcloud.AppDir/vandcloud.desktop || {
            echo "AppImage creation failed, continuing with other packages"
            echo "Contents of release directory:"
            ls -la release/ || echo "Release directory not found or empty"
          }
        shell: bash

      - name: Package Linux build
        run: |
          mkdir -p release
          # Create tar.gz archive of the Linux build
          cd build/linux/x64/release
          tar -czf ../../../release/VandCloud-linux.tar.gz bundle/
          cd ../../../..
        shell: bash

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: |
            release/VandCloud-linux.tar.gz
            release/VandCloud-*-linux.AppImage
            release/vandcloud.deb
            release/vandcloud.rpm

  release:
    needs: [build-android, build-windows, build-linux]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Android artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-apks

      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-build

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-build

      - name: Get tag name
        id: get_tag
        run: |
          if [[ $GITHUB_EVENT_NAME == 'workflow_dispatch' ]]; then
            echo "TAG_NAME=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          fi
        shell: bash

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false
          files: |
            VandCloud-universal.apk
            VandCloud-armeabi-v7a.apk
            VandCloud-arm64-v8a.apk
            VandCloud-x86_64.apk
            VandCloud-setup.exe
            VandCloud-windows-installer.zip
            VandCloud-windows-portable.zip
            VandCloud-linux.tar.gz
            VandCloud-*linux.AppImage
            vandcloud.deb
            vandcloud.rpm
          body: |
            ## Installation
            
            ### Download
            
            | Platform | Architecture | Download Link |
            |----------|-------------|---------------|
            | Android  | Universal   | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-universal.apk"><img src="https://img.shields.io/badge/Android-Universal-3DDC84?style=for-the-badge&logo=android&logoColor=white" alt="Android Universal"></a> |
            | Android  | armeabi-v7a | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-armeabi-v7a.apk"><img src="https://img.shields.io/badge/Android-armeabi--v7a-3DDC84?style=for-the-badge&logo=android&logoColor=white" alt="Android armeabi-v7a"></a> |
            | Android  | arm64-v8a   | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-arm64-v8a.apk"><img src="https://img.shields.io/badge/Android-arm64--v8a-3DDC84?style=for-the-badge&logo=android&logoColor=white" alt="Android arm64-v8a"></a> |
            | Android  | x86_64      | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-x86_64.apk"><img src="https://img.shields.io/badge/Android-x86_64-3DDC84?style=for-the-badge&logo=android&logoColor=white" alt="Android x86_64"></a> |
            | Windows  | x64 (Installer) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-setup.exe"><img src="https://img.shields.io/badge/Windows-Installer-0078D6?style=for-the-badge&logo=windows&logoColor=white" alt="Windows Installer"></a> |
            | Windows  | x64 (ZIP - Installer) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-windows-installer.zip"><img src="https://img.shields.io/badge/Windows-ZIP--Installer-0078D6?style=for-the-badge&logo=windows&logoColor=white" alt="Windows ZIP Installer"></a> |
            | Windows  | x64 (Portable ZIP) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-windows-portable.zip"><img src="https://img.shields.io/badge/Windows-Portable--ZIP-0078D6?style=for-the-badge&logo=windows&logoColor=white" alt="Windows Portable ZIP"></a> |
            | Linux    | x64 (tar.gz) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-linux.tar.gz"><img src="https://img.shields.io/badge/Linux-tar.gz-FCC624?style=for-the-badge&logo=linux&logoColor=black" alt="Linux tar.gz"></a> |
            | Linux    | x64 (AppImage) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/VandCloud-*-linux.AppImage"><img src="https://img.shields.io/badge/Linux-AppImage-FCC624?style=for-the-badge&logo=linux&logoColor=black" alt="Linux AppImage"></a> |
            | Linux    | x64 (.deb) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/vandcloud.deb"><img src="https://img.shields.io/badge/Linux-.deb-FCC624?style=for-the-badge&logo=debian&logoColor=white" alt="Linux .deb"></a> |
            | Linux    | x64 (.rpm) | <a href="https://github.com/code3-dev/VandCloud/releases/download/${{ env.TAG_NAME }}/vandcloud.rpm"><img src="https://img.shields.io/badge/Linux-.rpm-FCC624?style=for-the-badge&logo=redhat&logoColor=white" alt="Linux .rpm"></a> |